@model List<Clinica.Medica.Application.DTOs.AtendimentosDto>

@{
    var aguardando = Model.Where(x => x.Status == "Aguardando" || x.Status == "Triagem").ToList();
    var emAtendimento = Model.Where(x => x.Status == "EmAtendimento").ToList();
    var finalizados = Model.Where(x => x.Status == "Finalizado").ToList();
    var baseUrl = ViewBag.BaseUrl;
}
<div class="container py-4">
    <div class="col-md-12">
        <div class="col-md-8">
            <h2>Fila de Atendimento</h2>
            <p class="text-muted">Acompanhe o status dos pacientes em tempo real</p>
        </div>
        <div class="col-md-4">
            <button id="btnAtualizar" class="btn btn-primary">
                <i class="bi bi-arrow-clockwise" id="iconAtualizar"></i> Atualizar
            </button>
        </div>

    </div>

</div>
<div class="container m-10">
    <div class="row mb-4 text-center">
        <div class="col-md-4">
            <div class="card border shadow-sm">
                <div class="card-body">
                    <h5 class="card-title text-warning">Aguardando</h5>
                    <div class="fs-4">@aguardando.Count()</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border shadow-sm">
                <div class="card-body">
                    <h5 class="card-title text-success">Em Atendimento</h5>
                    <div class="fs-4">@emAtendimento.Count()</div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card border shadow-sm">
                <div class="card-body">
                    <h5 class="card-title fw-bold">Finalizados</h5>
                    <div class="fs-4">@finalizados.Count()</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Aguardando -->
    <div class="card border-warning-subtle mb-4">
        <div class="card-header bg-transparent text-warning fw-bold">
            <i class="bi bi-clock"></i> Pacientes Aguardando (@aguardando.Count)
        </div>
        <div class="card-body">
            @foreach (var item in aguardando)
            {
                <div class="border rounded p-3 mb-2 bg-warning bg-opacity-10 d-flex justify-content-between align-items-center">
                    <div>
                        <div class="fw-bold text-danger">#@item.NumeroSequencial</div>
                        <div>@item.PacienteNome</div>
                        <div class="text-muted small">@item.Especialidade</div>
                        <div class="text-muted small">Chegada: @item.DataHoraChegada.ToString("HH:mm")</div>
                    </div>
                    <div class="text-end">
                        <span class="badge bg-@(item.Prioritario ? "primary" : "secondary")">@((item.Prioritario) ? "Prioritário" : "Normal")</span>
                        <button class="btn btn-primary ms-2 chamar-btn" data-id="@item.Id">
                            <i class="bi bi-bell"></i> Chamar
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Em Atendimento -->
    <div class="card border-success-subtle mb-4">
        <div class="card-header bg-transparent text-success fw-bold">
            <i class="bi bi-person-check"></i> Em Atendimento (@emAtendimento.Count)
        </div>
        <div class="card-body">
            @foreach (var item in emAtendimento)
            {
                <div class="border rounded p-3 mb-2 bg-success bg-opacity-10 d-flex justify-content-between align-items-center">
                    <div>
                        <div class="fw-bold text-success">#@item.NumeroSequencial</div>
                        <div>@item.PacienteNome</div>
                        <div class="text-muted small">@item.Especialidade</div>
                        <div class="text-muted small">Chegada: @item.DataHoraChegada.ToString("HH:mm")</div>
                    </div>
                    <div class="text-end">
                        <span class="badge bg-success">Em Atendimento</span>
                        <button class="btn btn-outline-danger ms-2 finalizar-btn" data-id="@item.Id">
                            Finalizar
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    <script>
        const baseUrl = '@ViewBag.BaseUrl' || '';

        $(function () {

            function processarAcao(btn, url, textoLoading, textoOriginal) {
                btn.prop('disabled', true).html(`<span class="spinner-border spinner-border-sm"></span> ${textoLoading}`);
                
                $.ajax({
                    url: url,
                    type: 'POST',
                    success: function () {
                        console.log(`Requisição para ${url} finalizada com sucesso.`);
                        location.reload();
                    },
                    error: function (xhr) {
                        console.error(`Erro na requisição para ${url}:`, xhr);
                        btn.prop('disabled', false).html(textoOriginal);
                        alert("Erro ao processar a solicitação. Tente novamente.");
                    }
                });
            }

            $('.chamar-btn').click(function () {
                const id = $(this).data('id');
                const btn = $(this);
                const url = `${baseUrl}/api/atendimento/chamar/${id}`;
                processarAcao(btn, url, 'Chamando...', '<i class="bi bi-bell"></i> Chamar');
            });

            $('.finalizar-btn').click(function () {
                const id = $(this).data('id');
                const btn = $(this);
                const url = `${baseUrl}/api/atendimento/finalizar/${id}`;
                processarAcao(btn, url, 'Finalizando...', 'Finalizar');
            });

            $('#btnAtualizar').click(function () {
                const icon = $('#iconAtualizar');
                const btn = $(this);
                btn.prop('disabled', true);
                icon.addClass('spinner-border spinner-border-sm');
                setTimeout(() => location.reload(), 1000);
            });
        });
    </script>
}